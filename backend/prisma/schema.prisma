// This is your Prisma schema file, learn more about it in the docs: https://pris.ly/d/prisma-schema
// Attributes: https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#attributes
// Attributes functions: https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#attribute-functions
// Native type MySQL: https://www.prisma.io/docs/concepts/database-connectors/mysql#native-type-mappings
// Relations: https://www.prisma.io/docs/concepts/components/prisma-schema/relations
// Scalar types: https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#model-field-scalar-types

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

model Permission {
  id     Int         @id @default(autoincrement())
  title  Permissions @unique
  admins Admin[]
}

model Admin {
  id            Int           @id @default(autoincrement())
  role          AccountRole   @default(admin)
  name          String        @db.VarChar(512)
  email         String        @unique @db.VarChar(512)
  password      String        @db.Text
  status        AccountStatus
  imageUrl      String?       @db.Text
  code          String?       @db.VarChar(32)
  codeExpiresIn DateTime?     @db.DateTime(0)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  permissions   Permission[]
}

model User {
  id            Int           @id @default(autoincrement())
  role          AccountRole   @default(user)
  type          UserType
  name          String        @db.VarChar(512)
  email         String        @unique @db.VarChar(512)
  password      String        @db.Text
  status        AccountStatus
  imageUrl      String?       @db.Text
  code          String?       @db.VarChar(32)
  codeExpiresIn DateTime?     @db.DateTime(0)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  rides         Ride[]
  reviews       Review[]
}

model Driver {
  id            Int           @id @default(autoincrement())
  role          AccountRole   @default(driver)
  name          String        @db.VarChar(512)
  status        AccountStatus @default(ativo)
  description   String        @db.VarChar(512)
  vehicle       String        @db.VarChar(512)
  minKm         Int           @default(1)
  value         Float
  imageUrl      String?       @db.Text
  code          String?       @db.VarChar(32)
  codeExpiresIn DateTime?     @db.DateTime(0)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  rides         Ride[]
  reviews       Review[]
}

model Review {
  id         Int           @id @default(autoincrement())
  driverId   Int
  customerId Int
  rating     Float         @default(5.0)
  comment    String        @db.VarChar(512)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  driver     Driver        @relation(fields: [driverId], references: [id])
  customer   User          @relation(fields: [customerId], references: [id])
}

model Ride {
  id            Int           @id @default(autoincrement())
  customerId    Int
  driverId      Int
  origin        String        @db.VarChar(512)
  destination   String        @db.VarChar(512)
  distance      String        @db.VarChar(512)
  duration      String        @db.VarChar(512)
  value         Float         @default(0.00)
  driver        Driver        @relation(fields: [driverId], references: [id])
  customer      User          @relation(fields: [customerId], references: [id])
}

enum Permissions {
  configuracoes
  faqs
  textos
}

enum AccountRole {
  admin
  user
  driver
}

enum AccountStatus {
  ativo
  inativo
  pendente
}

enum UserType {
  app
  web
}
